/*
 * This classname is now reserved for use in the "ts-topbar.less"
 */
.ts-tabs {
	position: relative;
	white-space: nowrap;
	margin: 0;
	z-index: 2;
	float: left;
	font-size: 0;
	> * {
		font-size: @ts-fontsize;
	}
	.ts-link {
		.ts-mixin-button ();
		.ts-mixin-noround ();
		padding: @ts-unit;
		color: @ts-lite-darker;
		position: relative;
		margin: 0;
		em {
			background-color: @ts-medium-litest;
			color: @ts-black;
			min-width: 22px;
			text-align: center;
			border-radius: @ts-radius;
			font-size: @ts-fontsize-small;
			font-weight: bold;
			position: absolute;
			right: @ts-unit-half;
			top: 50%;
			z-index: 1;
			margin-top: 0 - 10px;
		}
		&:after {
			content: "";
			border-bottom: 6px solid transparent;
			position: absolute;
			right: 0;
			left: 0;
			bottom: 0;
		}
		&:hover {
			span {
				text-decoration: none;
			}
		}
	}
	li {
		display: inline-block;
		&.ts-counter {
			.ts-link {
				padding-right: @ts-unit-double;
			}
		}
		&.ts-selected {
			.ts-link {
				background-color: @ts-darkblue;
				cursor: default;
				color: @ts-white;
				em {
					background-color: @ts-red;
					color: @ts-white;
				}
				&:after {
					border-color: @ts-blue;
				}
			}
		}
		&:not(.ts-selected) {
			.ts-link:hover {
				background-color: @ts-dark-lite;
				&:after {
					border-color: @ts-medium-dark;
				}
			}
		}
	}
}


// Breakpoints .................................................................

.ts-mobile-only {
	.ts-tabs {
		position: absolute;
		z-index: 0;
		top: 100%;
		left: 0;
		right: 0;
		text-align: left;
		height: @ts-unit-double;
		li {
			position: absolute;
			background-color: @ts-dark;
			.ts-mixin-transition(background-color, @ts-transition-now);
			width: 100%;
			overflow: hidden;
			display: block;
			.ts-link {
				span {
					display: inline;
				}
				&:after {
					display: none;
				}
			}
			&.ts-selected {
				z-index: 1;
				.ts-link {
					background-color: transparent;
					color: @ts-white;
					cursor: pointer;
				}
			}
		}
		.ts-link {
			padding: @ts-unit-half;
			.ts-mixin-transition(color, @ts-transition-now);
			color: transparent;
			width: 100%;
			height: @ts-unit-double;
			span {
				vertical-align: baseline;
			}
		}
		&.ts-open {
			.ts-link {
				color: @ts-white;
			}
			.ts-selected {
				background-color: @ts-blue;
				.ts-button {
					cursor: default;
				}
			}
		}
		&:not(.ts-open) {
			li.ts-selected {
				.ts-link:hover {
					background-color: @ts-dark-lite;
				}
			}
		}
	}
}
