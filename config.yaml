# If you are not familiar with YAML format just like me, read https://en.wikipedia.org/wiki/YAML
# PLEASE DON'T MODIFY THIS FILE, instead you may create a local file called `config.local.yaml`
# to overwrites this file.
srcDir: src/internal
# destDir contains build results like node server required data, template and timestamp file which
# helps to speed up build process in local dev environment
destDir: dist

# staticDir folder ideally should be inside `destDir`, you can change name of it
# or move its location out of `destDir`, but it can't not be out of process.cwd()
staticDir: dist/static

port: 14333 # read by @dr-core/express-server
# set max-age property of the Cache-Control header in `ms` format, see https://github.com/expressjs/serve-static
# unit convention reference to github.com/guille/ms.js
cacheControlMaxAge: "365 days"
packageScopes:
  - dr
  - dr-core

nodeRoutePath: /

# enable devMode to denote default builder tool do not uglify JS bundles
devMode: false

# If we have public CDN domain name like "http://cdn.dianrong.com"
staticAssetsURL: ""

serverURL: ""

# Manually set bundle file name for 3rd-party libaraies, otherwise browserify
# will bundle them with every package that depends on them.
vendorBundleMap:
  core: # bundle name
      - lodash
      - jquery
      - eventemitter3
      - bluebird

# Global `browserify.bundle()` `noParse` option, there is also a package specific `dr.browserifyNoParse`
# available option in individual package.json file
browserifyNoParse:
    - q
    - lodash
    - jquery
    - @dr/gsap
    - @dr/angularjs

packageContextPathMapping:
    # Package short name - route path map, used by express server.
    # By default, every package's is mapped to a route context path "/<package short name>"
    # e.g.
    #   if package name is "@dr/example-dr", default route root path will be `/example-dr`
    # If you want change this rule, config route path here.
    doc-home: /

# During developing, you can set this to `true` to make every package to a single bundle
bundlePerPackage: false
# If you are not developer of this platform (like you are using this platform as
# dependency in node_modules folder), please don't override this option, but
# config `recipeFolder` instead.
#
# If you are about to read this property programatically, read `internalRecipeFolderPath`
# instead, it will be resolved to relative path to this platform package folder,
# even it is under node_modules folder loaded as dependency
internalRecipeFolder: package-recipe

# If you want to split your source code to different recipes
recipeSrcMapping:
    garage-recipe: src/garage
    examples-recipe: src/examples

# Recipes which are installed from registry server, they are owned by other contributors,
# add to this list to make them a part of you server.
installedRecipes: []
